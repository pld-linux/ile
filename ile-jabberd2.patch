diff -ruN ile-0.4.old/ChangeLog ile-0.4/ChangeLog
--- ile-0.4.old/ChangeLog	2005-02-10 20:17:05.431743368 +0100
+++ ile-0.4/ChangeLog	2005-02-10 22:56:23.793651488 +0100
@@ -1,3 +1,7 @@
+2005-02-10 20:10  kg (Mariusz Jakubowski)
+
+	* ile.pl: jabberd2 support
+
 2003-08-01 19:07  peralta
 
 	* ile.pl: version bump
diff -ruN ile-0.4.old/ile.pl ile-0.4/ile.pl
--- ile-0.4.old/ile.pl	2005-02-10 20:17:05.431743368 +0100
+++ ile-0.4/ile.pl	2005-02-10 23:09:41.109441064 +0100
@@ -43,7 +43,7 @@
 ##### Init
 sub load_config {
 	print " - config\n";
-	$config = XMLin("ile.xml");
+	$config = XMLin("/etc/jabber/ile.xml");
 }
 
 # jsconnect - Sets up callbacks and connects to the jabber server
@@ -56,11 +56,12 @@
 	$con->Info(	name	=>	"ILE",
 			version	=>	VERSION);
 
-	$con->SetCallBacks(	onconnect	=> 	\&send_probes);
+	$con->SetCallBacks(	onauth	=> 	\&send_probes);
 
-	$con->SetPresenceCallBacks(	available 	=>	\&presence_avail,
-					unavailable	=>	\&presence_unavail,
-				   );
+	$con->SetPresenceCallBacks(	
+            available 	=>	\&presence_avail,
+            unavailable	=>	\&presence_unavail,
+	);
 
 	$con->DefineNamespace(	xmlns	=>	'vcard-temp',
 				type	=>	'Query',
@@ -100,15 +101,24 @@
 						],
 			     );
 
-	$con->SetIQCallBacks(	"vcard-temp"	=>	{ get	=> \&vcard_get_cb, },
-				"jabber:iq:register" =>	{
-								get=>\&iqRegisterGetCB,
-								set=>\&iqRegisterSetCB,
-                                                 	},
-				"jabber:iq:browse"   =>	{
-								get=>\&iqBrowseGetCB,
-							},
-			    );
+	$con->SetIQCallBacks(	
+        "vcard-temp"	=>	{
+            get	=> \&vcard_get_cb,
+        },
+        "jabber:iq:register" =>	{
+            get=>\&iqRegisterGetCB,
+            set=>\&iqRegisterSetCB,
+        },
+        "jabber:iq:browse"   =>	{
+            get=>\&iqBrowseGetCB,
+        },
+        "http://jabber.org/protocol/disco#info"     =>  {
+            get => \&iqDiscoInfoGetCB,
+        },
+        "http://jabber.org/protocol/disco#items"    =>  {
+            get => \&iqDiscoItemsGetCB,
+        },
+    );
 
 
 	$con->Execute(	hostname	=>	$config->{'jabber'}->{'server'},
@@ -222,7 +232,8 @@
 	my $iqReplyQuery = $iqReply->NewQuery("jabber:iq:register");
 
 	# <remove/> ?
-	if ($query->DefinedRemove()) {
+    #if ($query->DefinedRemove()) {
+    if ($query->GetXML() =~ /<remove/io) {
 		delete($users{$fromJID});
 		delete($passwords{$fromJID});
 		delete($hosts{$fromJID});
@@ -301,7 +312,9 @@
 
 		# N::J intelligent presence DB
 		$con->PresenceDBParse($presence);
-		$reply = $presence->Reply(type=>'available', status=>'OK');
+		$reply = $presence->Reply(status=>'OK');
+        $reply->RemoveType();
+        $reply->SetFrom($reply->GetFrom().'/ILE') unless $reply->GetFrom() =~ /\//;
 	}
 
 	$con->Send($reply);
@@ -454,6 +467,52 @@
 
 ##### Helper funcs
 
+sub iqDiscoInfoGetCB
+{
+    my $sid = shift;
+    my $iq = shift;
+
+    my $to = $iq->GetTo();
+    my $from = $iq->GetFrom();
+    my $service = $config->{jabber}->{localname};
+
+    # tworzymy iq z odpowiedzia
+    my $iqReply = $iq->Reply(type=>'result');
+    # tworzymy nowe query o zadanym ns
+    my $iqReplyQuery = $iqReply->NewQuery('http://jabber.org/protocol/disco#info');
+    
+    # chwalimy sie obslugiwanymi "ficzerami"
+    $iqReplyQuery->AddFeature(var=>'http://jabber.org/protocol/disco#info');
+    $iqReplyQuery->AddFeature(var=>'http://jabber.org/protocol/disco#items');
+    $iqReplyQuery->AddFeature(var=>'jabber:iq:time');
+    $iqReplyQuery->AddFeature(var=>'jabber:iq:version');
+    $iqReplyQuery->AddFeature(var=>'jabber:iq:last');
+    $iqReplyQuery->AddFeature(var=>'jabber:iq:browse');
+    $iqReplyQuery->AddFeature(var=>'jabber:iq:register');
+    $iqReplyQuery->AddFeature(var=>'vcard-temp');
+
+    # ustawiamy "tozsamosc" :)
+    $iqReplyQuery->AddIdentity(
+        category    => 'headline',
+        type        => 'notice',
+        name        => 'ILE',
+    );
+
+    $con->Send($iqReply);
+}
+
+sub iqDiscoItemsGetCB
+{
+    my $sid = shift;
+    my $iq = shift;
+
+    my $iqReply = $iq->Reply(type=>'result');
+    my $iqReplyQuery = $iqReply->NewQuery('http://jabber.org/protocol/disco#items');
+    $con->Send($iqReply);
+} 
+
+
+
 # vcard_get_cb - handles vcard-temp ns
 sub vcard_get_cb { 
 	my ($sid, $iq) = @_;
@@ -473,7 +532,7 @@
 load_config();
 local $lang = $config->{'jabber'}->{'language'};
 
-local $registerForm = new Net::Jabber::X();
+local $registerForm = new Net::Jabber::Stanza('X');
 $registerForm->SetXMLNS('jabber:x:data');
 $registerForm->SetData(	instructions	=>	$config->{'form'}->{$lang}->{'instructions'},
 			title		=>	$config->{'form'}->{$lang}->{'title'},
diff -ruN ile-0.4.old/ile.xml ile-0.4/ile.xml
--- ile-0.4.old/ile.xml	2005-02-10 20:17:05.431743368 +0100
+++ ile-0.4/ile.xml	2005-02-10 22:56:23.794651336 +0100
@@ -1,8 +1,8 @@
 <config>
   <jabber>
      <server>myhost.com</server> <!-- your jabber server -->
-     <port>31515</port> <!-- the port the jabber server is waiting for us -->
-     <secret>hallo</secret> <!-- the shared secret -->
+     <port>5347</port> <!-- the port the jabber server is waiting for us -->
+     <secret>secret</secret> <!-- the shared secret -->
      <service>ile.myhost.com</service> <!-- our name -->
      <connectsleep>5</connectsleep> <!-- seconds to wait if we get disconnected -->
      <language>en</language> <!-- language of the messages -->
@@ -24,13 +24,13 @@
   </mail>
 
   <files> <!-- where to put the data -->
-    <users>users.db</users>
-    <passwords>passwords.db</passwords>
-    <hosts>hosts.db</hosts>
-    <types>types.db</types>
-    <notifyxa>notifyxa.db</notifyxa>
-    <notifydnd>notifydnd.db</notifydnd>
-    <urls>urls.db</urls>
+	  <users>/var/lib/jabber/ile/users.db</users>
+	  <passwords>/var/lib/jabber/ile/passwords.db</passwords>
+	  <hosts>/var/lib/jabber/ile/hosts.db</hosts>
+	  <types>/var/lib/jabber/ile/types.db</types>
+	  <notifyxa>/var/lib/jabber/ile/notifyxa.db</notifyxa>
+	  <notifydnd>/var/lib/jabber/ile/notifydnd.db</notifydnd>
+	  <urls>/var/lib/jabber/ile/urls.db</urls>
   </files>
 
   <form> <!-- messages sent to the user -->
